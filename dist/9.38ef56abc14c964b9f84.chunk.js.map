{"version":3,"sources":["webpack:///9.38ef56abc14c964b9f84.chunk.js","webpack:///./utils/closest-polyfill.js"],"names":["webpackJsonp","250","module","exports","__webpack_require__","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","selector","element","this","elements","document","ownerDocument","querySelectorAll","i","length","item","closest","nodeType","Node","ELEMENT_NODE","parentNode"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YCQyC,mBAA9BC,SAAQC,UAAUC,UAC3BF,QAAQC,UAAUC,QAAUF,QAAQC,UAAUE,mBAC5CH,QAAQC,UAAUG,oBAClBJ,QAAQC,UAAUI,uBAElB,SAAiBC,GAIf,IAHA,GAAMC,GAAUC,KACVC,GAAYF,EAAQG,UAAYH,EAAQI,eAAeC,iBAAiBN,GAC1EO,EAAIJ,EAASK,SACRD,GAAK,GAAKJ,EAASM,KAAKF,KAAON,IACxC,MAAOM,IAAK,IASuB,kBAA9Bb,SAAQC,UAAUe,UAC3BhB,QAAQC,UAAUe,QAAU,SAAiBV,GAG3C,IAFA,GAAIC,GAAUC,KAEPD,GAAWA,EAAQU,WAAaC,KAAKC,cAAc,CACxD,GAAIZ,EAAQL,QAAQI,GAClB,MAAOC,EAETA,GAAUA,EAAQa,WAEpB,MAAO","file":"9.38ef56abc14c964b9f84.chunk.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 250:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\n * Code pulled from:\n * https://github.com/jonathantneal/closest/blob/master/closest.js\n * https://plainjs.com/javascript/traversing/get-closest-element-by-selector-39/\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n * http://stackoverflow.com/questions/18663941/finding-closest-element-without-jquery\n */\n\n/**\n * Element.matches() polyfill\n * The Element.matches() method returns true if the element would be selected by the specified selector string;\n * otherwise, returns false.\n */\nif (typeof Element.prototype.matches !== 'function') {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.webkitMatchesSelector || function matches(selector) {\n    var element = this;\n    var elements = (element.document || element.ownerDocument).querySelectorAll(selector);\n    var i = elements.length;\n    while (--i >= 0 && elements.item(i) !== element) {}\n    return i > -1;\n  };\n}\n\n/**\n * Element.closest() polyfill\n * The Element.closest() method returns the closest ancestor of the current element (or the current element itself)\n * which matches the selectors given in parameter. If there isn't such an ancestor, it returns null.\n */\nif (typeof Element.prototype.closest !== 'function') {\n  Element.prototype.closest = function closest(selector) {\n    var element = this;\n\n    while (element && element.nodeType === Node.ELEMENT_NODE) {\n      if (element.matches(selector)) {\n        return element;\n      }\n      element = element.parentNode;\n    }\n    return null;\n  };\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 9.38ef56abc14c964b9f84.chunk.js","/*\n * Code pulled from:\n * https://github.com/jonathantneal/closest/blob/master/closest.js\n * https://plainjs.com/javascript/traversing/get-closest-element-by-selector-39/\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n * http://stackoverflow.com/questions/18663941/finding-closest-element-without-jquery\n */\n\n/**\n * Element.matches() polyfill\n * The Element.matches() method returns true if the element would be selected by the specified selector string;\n * otherwise, returns false.\n */\nif (typeof Element.prototype.matches !== 'function') {\n  Element.prototype.matches = Element.prototype.msMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.webkitMatchesSelector ||\n\n    function matches(selector) {\n      const element = this;\n      const elements = (element.document || element.ownerDocument).querySelectorAll(selector);\n      let i = elements.length;\n      while (--i >= 0 && elements.item(i) !== element);\n      return i > -1;\n    };\n}\n\n/**\n * Element.closest() polyfill\n * The Element.closest() method returns the closest ancestor of the current element (or the current element itself)\n * which matches the selectors given in parameter. If there isn't such an ancestor, it returns null.\n */\nif (typeof Element.prototype.closest !== 'function') {\n  Element.prototype.closest = function closest(selector) {\n    let element = this;\n\n    while (element && element.nodeType === Node.ELEMENT_NODE) {\n      if (element.matches(selector)) {\n        return element;\n      }\n      element = element.parentNode;\n    }\n    return null;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./utils/closest-polyfill.js"],"sourceRoot":""}