/**
 * Code inspired by
 *   https://www.smashingmagazine.com/2016/05/fluid-typography/
 *   https://madebymike.com.au/writing/precise-control-responsive-typography/
 *   https://madebymike.com.au/writing/fluid-type-calc-examples/
 *   https://codepen.io/MadeByMike/pen/bEEGvv?editors%3D0100
 *   https://jonathan-harrell.com/unlocking-benefits-css-variables/
 *   https://github.com/jonathanharrell/hiq
 *   https://blog.typekit.com/2016/08/17/flexible-typography-with-css-locks/
 *   https://pilot.co/blog/implementing-baseline-rhythm-in-css/
 *   https://medium.com/written-in-code/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b
 */

@import './custom-media.css';
@import './colors.css';

:root {
  /* font families */
  --font-family-roboto-light: 'Roboto-Light', 'Open Sans', 'Helvetica Neue Light', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
  --font-family-roboto-regular: 'Roboto-Regular', 'Open Sans', 'Helvetica Neue Light', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
  --font-family-sans-serif: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
  --font-family-arial: Arial, "Helvetica Neue", Helvetica, sans-serif;
  --font-family-helvetica: 'Helvetica', 'Arial', sans-serif;
  --font-family-serif: Georgia, 'Times New Roman', Times, serif;
  --font-family-monospace: Menlo, Monaco, Consolas, 'Courier New', monospace;
  --font-family-heading: var(--font-family-roboto-light);
  --font-family-body: var(--font-family-roboto-regular);
  --letter-spacing: -0.025em;

  /* font weights */
  --font-weight-light: 300;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
}

@media (--high-dppx) {
  :root {
    /* Font weights high density screens */
    --font-weight-light: 200;
    --font-weight-normal: 300;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
  }
}

/* -------------------------------- *
 * Override/Extend normalize.css    *
 * -------------------------------- */

* {
  font-family: inherit;
  line-height: inherit;
  color: inherit;
}

*,
*::before,
*::after {
  /*
   * Make all elements from the DOM inherit from the parent box-sizing
   * Since `*` has a specificity of 0, it does not override the `html` value
   * making all elements inheriting from the root box-sizing value
   * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
   */
  box-sizing: inherit;
}

/*
 * 1. Change the default font family in all browsers.
 * 2. Setting @viewport causes scrollbars to overlap content in IE11 and Edge, so
 *    we force a non-overlapping, non-auto-hiding scrollbar to counteract.
 * 3. Change the default tap highlight to be completely transparent in iOS.
 */

html {
  box-sizing: border-box;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-family: sans-serif; /* 1 */
  font-weight: var(--font-weight-normal);
  letter-spacing: var(--letter-spacing);
  -ms-overflow-style: scrollbar; /* 2 */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* 3 */
}

/*
 * 1. Set an explicit initial text-align value so that we can later use the
 *    the `inherit` value on things like `<th>` elements.
 */
body {
  background-color: var(--page-background-color);
  color: var(--text-color-primary);
  text-align: left; /* 1 */
}

/*
 * IE10+ doesn't honor `<meta name='viewport'>` in some cases
 * See: https://github.com/twbs/bootstrap/blob/v4-dev/scss/_reboot.scss
*/
@at-root {
  @-ms-viewport {
    width: device-width;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: var(--font-weight-bold);
  font-family: var(--font-family-heading);
}

b,
dt,
strong {
  font-weight: var(--font-weight-semibold);
}

label,
legend,
button,
[type="button"],
[type="reset"],
[type="submit"] {
  font-weight: var(--font-weight-medium);
}

abbr[title] {
  border-bottom: dotted 1px currentColor;
  text-decoration: none;
}

address {
  font-style: normal;
}

hr {
  box-sizing: content-box;
  position: relative;
  border: 0;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background: #808080;
  }
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

legend,
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
}

img {
  max-width: 100%;
  vertical-align: middle;
}

/*
 * Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
 *
 * In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
 * DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
 * However, they DO support removing the click delay via `touch-action: manipulation`.
 * See:
 *   https://getbootstrap.com/docs/4.0/content/reboot/#click-delay-optimization-for-touch
 *   https://caniuse.com/#feat=css-touch-action
 *   https://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay
*/
a,
area,
button,
[role="button"],
[type="button"],
[type="reset"],
[type="submit"],
input:not([type="range"]),
label,
select,
summary,
textarea {
  touch-action: manipulation;
}

/*
 * 1. Textareas should really only resize vertically so they don't break their (horizontal) containers.
 */
textarea {
  resize: vertical; /* 1 */
}

/*
 * 1. Prevent button text from being selectable.
 */
button,
[role="button"],
[type="button"],
[type="reset"],
[type="submit"] {
  cursor: pointer;
  user-select: none; /* 1 */

  &:focus {
    /*
     * Work around a Firefox/IE bug where the transparent `button` background
     * results in a loss of the default `button` focus styles.
     */
    outline: 1px dotted;
    outline: 5px auto -webkit-focus-ring-color;
  }
}

a {
  color: var(--text-color-anchor);
  cursor: pointer;
}

/*
 * Undo styles for placeholder links/named anchors (without href)
 * which have not been made explicitly keyboard-focusable (without tabindex).
 */
a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;
}

[disabled] {
  cursor: default;
  pointer-events: none;
  color: var(--text-color-disabled);
}

/*
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex^='-']:focus {
  outline: none !important;
}

/* -------------------------------- *
 * Modular scale + Vertical Rhythm  *
 * -------------------------------- */

/* stylelint-disable-next-line no-duplicate-selectors */
:root {
  /* Fluid font and line height */
  --min-screen: var(--phone-width);
  --max-screen: var(--tablet-width);
  --min-line-height: 1.375;
  --max-line-height: 1.5;
  --min-font-size: 0.875; /* 0.9375; */
  --max-font-size: 1; /* 1.125; */
  --cap-height: 0.64; /* See: https://medium.com/written-in-code/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b */

  /* Base font */
  --base-font-size: calc(var(--min-font-size) * 1rem);
  --base-line-height: calc(var(--min-line-height) * 1rem);

  /* Horizontal spacing */
  --space-xs: calc(var(--base-line-height) * 0.1667);
  --space-s: calc(var(--base-line-height) * 0.3333);
  --space-m: calc(var(--base-line-height) * 0.6667);
  --space-l: calc(var(--base-line-height) * 1);
  --space-xl: calc(var(--base-line-height) * 1.3333);
  --space-xxl: calc(var(--base-line-height) * 2.6667);

  /* Modular type scales, see: http://www.modularscale.com */
  --minor-second: 1.067;     /* Ratio = 15:16 */
  --major-second: 1.125;     /* Ratio = 8:9 */
  --minor-third: 1.2;        /* Ratio = 5:6 */
  --major-third: 1.25;       /* Ratio = 4:5 */
  --perfect-fourth: 1.333;   /* Ratio = 3:4 */
  --augmented-fourth: 1.414; /* Ratio = 1:âˆš2 */
  --perfect-fifth: 1.5;      /* Ratio = 2:3 */
  --minor-sixth: 1.6;        /* Ratio = 5:8 */
  --golden: 1.618;           /* Ratio = 1:1.618 */
  --major-sixth: 1.667;      /* Ratio = 3:5 */
  --minor-seventh: 1.778;    /* Ratio = 9:16 */
  --major-seventh: 1.875;    /* Ratio = 8:15 */
  --octave: 2;               /* Ratio = 1:2 */

  /*
   * Maybe create a mixin for modular scale using this formula:
   * ms(n) =  pow($ms-ratio, $n) * $ms-base;
   * See: https://www.sassmeister.com/gist/10620fefd1ed75189f1b
   * See: https://www.bhalash.com/archives/13544805638
   */
  --ms-base: 1rem;
  --ms-scale: var(--major-third);
  --ms0: var(--ms-base);
  --ms1: calc(var(--ms-scale) * var(--ms0));
  --ms2: calc(var(--ms-scale) * var(--ms1));
  --ms3: calc(var(--ms-scale) * var(--ms2));
  --ms4: calc(var(--ms-scale) * var(--ms3));
  --ms5: calc(var(--ms-scale) * var(--ms4));
  --ms6: calc(var(--ms-scale) * var(--ms5));
  --ms7: calc(var(--ms-scale) * var(--ms6));
  --ms-1: calc(var(--ms0) / var(--ms-scale));
  --ms-2: calc(var(--ms-1) / var(--ms-scale));

  /* See: https://medium.com/written-in-code/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b */
  --offset: calc((var(--base-line-height) - var(--cap-height) * var(--base-font-size)) / 2);
  --offset-ms0: calc((var(--base-line-height) - var(--cap-height) * var(--ms0)) / 2);
  --offset-ms1: calc((var(--base-line-height) - var(--cap-height) * var(--ms1)) / 2);
  --offset-ms2: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms2)) / 2);
  --offset-ms3: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms3)) / 2);
  --offset-ms4: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms4)) / 2);
  --offset-ms-1: calc((var(--base-line-height) - var(--cap-height) * var(--ms-1)) / 2);
}

@media (--media-tablet) {
  :root {
    /* Base font, fluid for tablet size */
    --base-font-size: calc(var(--min-font-size) * 1rem + (var(--max-font-size) - var(--min-font-size)) * ((100vw - var(--min-screen) * 1rem) / (var(--max-screen) - var(--min-screen))));

    /* Fluid line height (molten leading) */
    --base-line-height: calc(var(--min-line-height) * 1rem + (var(--max-line-height) - var(--min-line-height)) * ((100vw - var(--min-screen) * 1rem) / (var(--max-screen) - var(--min-screen))));

    /* Horizontal spacing */
    --space-xs: calc(var(--base-line-height) * 0.1667);
    --space-s: calc(var(--base-line-height) * 0.3333);
    --space-m: calc(var(--base-line-height) * 0.6667);
    --space-l: calc(var(--base-line-height) * 1);
    --space-xl: calc(var(--base-line-height) * 1.3333);
    --space-xxl: calc(var(--base-line-height) * 2.6667);

    /* Offset */
    --offset: calc((var(--base-line-height) - var(--cap-height) * var(--base-font-size)) / 2);
    --offset-ms0: calc((var(--base-line-height) - var(--cap-height) * var(--ms0)) / 2);
    --offset-ms1: calc((var(--base-line-height) - var(--cap-height) * var(--ms1)) / 2);
    --offset-ms2: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms2)) / 2);
    --offset-ms3: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms3)) / 2);
    --offset-ms4: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms4)) / 2);
    --offset-ms-1: calc((var(--base-line-height) - var(--cap-height) * var(--ms-1)) / 2);
  }
}

@media (--media-desktop) {
  :root {
    /* Base font large screen */
    --base-font-size: calc(var(--max-font-size) * 1rem);
    --base-line-height: calc(var(--max-line-height) * 1rem);
    --space-xs: calc(var(--base-line-height) * 0.1667);
    --space-s: calc(var(--base-line-height) * 0.3333);
    --space-m: calc(var(--base-line-height) * 0.6667);
    --space-l: calc(var(--base-line-height) * 1);
    --space-xl: calc(var(--base-line-height) * 1.3333);
    --space-xxl: calc(var(--base-line-height) * 2.6667);
    --offset: calc((var(--base-line-height) - var(--cap-height) * var(--base-font-size)) / 2);
    --offset-ms0: calc((var(--base-line-height) - var(--cap-height) * var(--ms0)) / 2);
    --offset-ms1: calc((var(--base-line-height) - var(--cap-height) * var(--ms1)) / 2);
    --offset-ms2: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms2)) / 2);
    --offset-ms3: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms3)) / 2);
    --offset-ms4: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms4)) / 2);
    --offset-ms-1: calc((var(--base-line-height) - var(--cap-height) * var(--ms-1)) / 2);
  }
}


/* stylelint-disable-next-line no-duplicate-selectors */
:root {
  font-size: var(--base-font-size);
  line-height: var(--base-line-height);
}

/* stylelint-disable-next-line no-duplicate-selectors */
* {
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 0;
  padding-bottom: 0;
}

/*
* + * {
  margin-top: var(--base-line-height);
}
*/

p,
dl,
ol,
ul,
li,
pre,
form,
table,
blockquote,
figcaption {
  margin-top: calc(var(--offset) + var(--base-line-height));
  margin-bottom: calc(var(--offset) * -1);

  &:first-child {
    margin-top: var(--offset);
  }
}

/* stylelint-disable-next-line no-descending-specificity */
li {
  margin-top: var(--offset);
}

h1 {
  font-size: var(--ms4);

  /* Line height must be greater or equal to font size and
   * must be a multiple of base line height
   */
  line-height: calc(var(--base-line-height) * 2);
  margin-top: calc(var(--offset-ms4) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms4) * -1);

  &:first-child {
    margin-top: var(--offset-ms4);
  }
}

h2 {
  font-size: var(--ms3);
  line-height: calc(var(--base-line-height) * 2);
  margin-top: calc(var(--offset-ms3) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms3) * -1);

  &:first-child {
    margin-top: var(--offset-ms3);
  }
}

h3 {
  font-size: var(--ms2);
  line-height: calc(var(--base-line-height) * 2);
  margin-top: calc(var(--offset-ms2) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms2) * -1);

  &:first-child {
    margin-top: var(--offset-ms2);
  }
}

h4 {
  font-size: var(--ms1);
  margin-top: calc(var(--offset-ms1) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms1) * -1);

  &:first-child {
    margin-top: var(--offset-ms1);
  }
}

h5 {
  font-size: var(--ms0);
  margin-top: calc(var(--offset-ms0) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms0) * -1);

  &:first-child {
    margin-top: var(--offset-ms0);
  }
}

h6 {
  font-size: var(--ms-1);
  margin-top: calc(var(--offset-ms-1) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms-1) * -1);

  &:first-child {
    margin-top: var(--offset-ms-1);
  }
}

legend {
  display: table;
  padding: 0 var(--space-xs);
  margin-left: calc(var(--space-xs) * -1);
}

fieldset {
  border: 1px solid var(--text-color-icon);
  border-radius: 2px;
  padding: 0.01em 0 calc(var(--base-line-height) - 1px) var(--space-s);
  margin: 0;
  min-width: 0;
}

body:not(:-moz-handler-blocked) fieldset {
  display: table-cell;
}

/* stylelint-disable-next-line no-descending-specificity */
button,
label,
input:not([type="radio"]):not([type="checkbox"]),
select,
textarea {
  border: 1px solid var(--text-color-icon);
  border-radius: 2px;
  line-height: var(--base-line-height);
  font-family: inherit;
  background: transparent;
  display: block;
  margin-top: calc(var(--offset) - 1px);
  margin-bottom: calc((var(--offset) + 1px) * -1);
}

label {
  border-color: transparent;
}

/*
label,
input:not([type=radio]):not([type=checkbox]),
button,
*/
select:not([multiple]) {
  height: calc(var(--base-line-height) + 2px);
}

option,
optgroup {
  height: var(--base-line-height);
}

select[multiple],
textarea {
  height: calc(var(--base-line-height) * 4 + 2px);
}

/* Heights for input elements with border-top: 1px and border-bottom: 1px */
[height="1"],
select[multiple][size="1"],
textarea[rows="1"] {
  height: calc(var(--base-line-height) + 2px);
}

[height="2"],
select[multiple][size="2"],
textarea[rows="2"] {
  height: calc(var(--base-line-height) * 2 + 2px);
}

[height="3"],
select[multiple][size="3"],
textarea[rows="3"] {
  height: calc(var(--base-line-height) * 3 + 2px);
}

[height="4"],
select[multiple][size="4"],
textarea[rows="4"] {
  height: calc(var(--base-line-height) * 4 + 2px);
}

[height="5"],
select[multiple][size="5"],
textarea[rows="5"] {
  height: calc(var(--base-line-height) * 5 + 2px);
}

[height="6"],
select[multiple][size="6"],
textarea[rows="6"] {
  height: calc(var(--base-line-height) * 6 + 2px);
}

[height="7"],
select[multiple][size="7"],
textarea[rows="7"] {
  height: calc(var(--base-line-height) * 7 + 2px);
}

[height="8"],
select[multiple][size="8"],
textarea[rows="8"] {
  height: calc(var(--base-line-height) * 8 + 2px);
}

[height="9"],
select[multiple][size="9"],
textarea[rows="9"] {
  height: calc(var(--base-line-height) * 9 + 2px);
}

[height="10"],
select[multiple][size="10"],
textarea[rows="10"] {
  height: calc(var(--base-line-height) * 10 + 2px);
}

:global(.grid-lines) {
  background-image: linear-gradient(rgba(200, 50, 50, 0.25) 1px, transparent 1px);
  background-size: 1px var(--base-line-height);
}


/* Focusable elements
a[href]:not([tabindex^='-']),
area[href]:not([tabindex^='-']),
input:not([disabled]):not([tabindex^='-']),
select:not([disabled]):not([tabindex^='-']),
textarea:not([disabled]):not([tabindex^='-']),
button:not([disabled]):not([tabindex^='-']),
iframe:not([tabindex^='-']),
[tabindex]:not([tabindex^='-']),
[contentEditable=true]:not([tabindex^='-']) {
  outline: none;
  transition: all 0.20s ease-in-out;

  &:focus {
    box-shadow: 0 0 5px rgba(81, 203, 238, 1);
  }
}
*/
