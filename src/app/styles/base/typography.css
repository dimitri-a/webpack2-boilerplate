/**
 * Code inspired by
 *   https://www.smashingmagazine.com/2016/05/fluid-typography/
 *   https://madebymike.com.au/writing/precise-control-responsive-typography/
 *   https://madebymike.com.au/writing/fluid-type-calc-examples/
 *   https://codepen.io/MadeByMike/pen/bEEGvv?editors%3D0100
 *   https://jonathan-harrell.com/unlocking-benefits-css-variables/
 *   https://github.com/jonathanharrell/hiq
 *   https://blog.typekit.com/2016/08/17/flexible-typography-with-css-locks/
 *   https://pilot.co/blog/implementing-baseline-rhythm-in-css/
 *   https://medium.com/written-in-code/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b
 */

@import '../abstracts/custom-media.css';

:root {
  /* font families */
  --font-family-roboto: 'Roboto-Light', 'Open Sans', 'Helvetica Neue Light', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
  --font-family-sans-serif: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
  --font-family-serif: Georgia, 'Times New Roman', Times, serif;
  --font-family-monospace: Menlo, Monaco, Consolas, 'Courier New', monospace;
  --font-family: var(--font-family-roboto);
  --letter-spacing: -0.025em;
  --cap-height: 0.65;

  /* font weights */
  --font-weight-light: 300;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;

  /* Fluid font */
  --min-screen: var(--phone-width);
  --max-screen: var(--tablet-width);
  --min-line-height: 1.4;
  --max-line-height: 1.5;
  --min-font-size: 0.9;
  --max-font-size: 1;

  /* Base font */
  --base-font-size: calc(var(--min-font-size) * 1rem);
  --base-line-height: calc(var(--min-line-height) * 1rem);

  /* Modular scale
   * Maybe create a mixin for modular scale using this formula:
   * ms(n) =  pow($ms-ratio, $n) * $ms-base;
   * See: https://www.sassmeister.com/gist/10620fefd1ed75189f1b
   * See: https://www.bhalash.com/archives/13544805638
   */
  --ms-base: 1rem;
  --ms-ratio: 1.2; /* Ratio = 5:6, see: http://www.modularscale.com */
  --ms0: var(--ms-base);
  --ms1: calc(var(--ms-ratio) * var(--ms0));
  --ms2: calc(var(--ms-ratio) * var(--ms1));
  --ms3: calc(var(--ms-ratio) * var(--ms2));
  --ms4: calc(var(--ms-ratio) * var(--ms3));
  --ms5: calc(var(--ms-ratio) * var(--ms4));
  --ms6: calc(var(--ms-ratio) * var(--ms5));
  --ms7: calc(var(--ms-ratio) * var(--ms6));
  --ms-1: calc(var(--ms0) / var(--ms-ratio));
  --ms-2: calc(var(--ms-1) / var(--ms-ratio));

  /* See: https://medium.com/written-in-code/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b */
  --offset: calc((var(--base-line-height) - var(--cap-height) * var(--base-font-size)) / 2);
  --offset-ms0: calc((var(--base-line-height) - var(--cap-height) * var(--ms0)) / 2);
  --offset-ms1: calc((var(--base-line-height) - var(--cap-height) * var(--ms1)) / 2);
  --offset-ms2: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms2)) / 2);
  --offset-ms3: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms3)) / 2);
  --offset-ms4: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms4)) / 2);
  --offset-ms-1: calc((var(--base-line-height) - var(--cap-height) * var(--ms-1)) / 2);
}

@media (--high-dppx) {
  :root {
    /* Font weights high density screens */
    --font-weight-light: 200;
    --font-weight-normal: 300;
    --font-weight-medium: 400;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
  }
}

@media (--media-tablet) {
  :root {
    /* Base font large screen */
    --base-font-size: calc(var(--max-font-size) * 1rem);
    --base-line-height: calc(var(--max-line-height) * 1rem);
    --offset: calc((var(--base-line-height) - var(--cap-height) * var(--base-font-size)) / 2);
    --offset-ms0: calc((var(--base-line-height) - var(--cap-height) * var(--ms0)) / 2);
    --offset-ms1: calc((var(--base-line-height) - var(--cap-height) * var(--ms1)) / 2);
    --offset-ms2: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms2)) / 2);
    --offset-ms3: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms3)) / 2);
    --offset-ms4: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms4)) / 2);
    --offset-ms-1: calc((var(--base-line-height) - var(--cap-height) * var(--ms-1)) / 2);
  }
}

@media (--media-phone) {
  :root {
    /* Base font, fluid for tablet size */
    --base-font-size: calc(var(--min-font-size) * 1rem + (var(--max-font-size) - var(--min-font-size)) * ((100vw - var(--min-screen) * 1rem) / (var(--max-screen) - var(--min-screen))));

    /* Fluid line height (molten leading) */
    --base-line-height: calc(var(--min-line-height) * 1rem + (var(--max-line-height) - var(--min-line-height)) * ((100vw - var(--min-screen) * 1rem) / (var(--max-screen) - var(--min-screen))));

    /* -- */
    --offset: calc((var(--base-line-height) - var(--cap-height) * var(--base-font-size)) / 2);
    --offset-ms0: calc((var(--base-line-height) - var(--cap-height) * var(--ms0)) / 2);
    --offset-ms1: calc((var(--base-line-height) - var(--cap-height) * var(--ms1)) / 2);
    --offset-ms2: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms2)) / 2);
    --offset-ms3: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms3)) / 2);
    --offset-ms4: calc((var(--base-line-height) * 2 - var(--cap-height) * var(--ms4)) / 2);
    --offset-ms-1: calc((var(--base-line-height) - var(--cap-height) * var(--ms-1)) / 2);
  }
}

/* -------------------------------- *
 * Override/Extend normalize.css    *
 * -------------------------------- */

*,
*::before,
*::after {
  /**
   * Make all elements from the DOM inherit from the parent box-sizing
   * Since `*` has a specificity of 0, it does not override the `html` value
   * making all elements inheriting from the root box-sizing value
   * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
   */
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  text-size-adjust: 100%;
  font-family: var(--font-family);
  font-weight: var(--font-weight-normal);
  letter-spacing: var(--letter-spacing);
}

body {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: var(--font-weight-bold);
}

b,
dt,
strong {
  font-weight: var(--font-weight-semibold);
}

abbr[title] {
  border-bottom: dotted 1px currentColor;
  text-decoration: none;
}

address {
  font-style: normal;
}

button,
fieldset,
input:not([type="radio"]):not([type="checkbox"]),
select,
textarea {
  border-width: 1px;
  border-style: solid;
  border-color: #808080;
}

iframe {
  border: 0;
}

hr {
  box-sizing: content-box;
  position: relative;
  border: 0;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background: #808080;
  }
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

a:active,
a:hover {
  outline-width: 0;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  cursor: pointer;
}

[disabled] {
  cursor: default;
}

legend,
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
}

/* -------------------------------- *
 * Modular scale + Vertical Rhythm  *
 * -------------------------------- */

/* stylelint-disable-next-line */
:root {
  font-size: var(--base-font-size);
  line-height: var(--base-line-height);
}

* {
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 0;
  padding-bottom: 0;
}

li {
  margin-top: var(--offset);
}

p,
dl,
ol,
ul,
li,
pre,
form,
table,
blockquote,
figcaption {
  margin-top: calc(var(--offset) + var(--base-line-height));
  margin-bottom: calc(var(--offset) * -1);

  &:first-child {
    margin-top: var(--offset);
  }
}

h1 {
  font-size: var(--ms4);

  /* Line height must be greater or equal to font size and
   * must be a multiple of base line height
   */
  line-height: calc(var(--base-line-height) * 2);
  margin-top: calc(var(--offset-ms4) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms4) * -1);

  &:first-child {
    margin-top: var(--offset-ms4);
  }
}

h2 {
  font-size: var(--ms3);
  line-height: calc(var(--base-line-height) * 2);
  margin-top: calc(var(--offset-ms3) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms3) * -1);

  &:first-child {
    margin-top: var(--offset-ms3);
  }
}

h3 {
  font-size: var(--ms2);
  line-height: calc(var(--base-line-height) * 2);
  margin-top: calc(var(--offset-ms2) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms2) * -1);

  &:first-child {
    margin-top: var(--offset-ms2);
  }
}

h4 {
  font-size: var(--ms1);
  margin-top: calc(var(--offset-ms1) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms1) * -1);

  &:first-child {
    margin-top: var(--offset-ms1);
  }
}

h5 {
  font-size: var(--ms0);
  margin-top: calc(var(--offset-ms0) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms0) * -1);

  &:first-child {
    margin-top: var(--offset-ms0);
  }
}

h6 {
  font-size: var(--ms-1);
  margin-top: calc(var(--offset-ms-1) + var(--base-line-height));
  margin-bottom: calc(var(--offset-ms-1) * -1);

  &:first-child {
    margin-top: var(--offset-ms-1);
  }
}

:global(.grid-lines) {
  background-image: linear-gradient(rgba(200, 50, 50, 0.25) 1px, transparent 1px);
  background-size: 1px var(--base-line-height);
}
